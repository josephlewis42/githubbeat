################### Githubbeat Configuration Example #########################

############################# Githubbeat ######################################

githubbeat:
  # Defines how often an event is sent to the output
  period: 1h
  # Should the first collection happen immediately after plugin start?
  # if false, the duration defined by period will elapse first.
  start_immediately: true
  # Defines how much time a fetch should at most take
  job_timeout: 10s
  # List of individual repositories to watch
  # Expected format is [owner]/[repo]
  repos:
      - elastic/beats
  # List of individual organizations to watch.
  # WARNING, enabling these may quickly consume your quota.
  orgs: []
  # Access token to use for authentication
  access_token: ""

  # Enterprise attributes allow special functions for those running GitHub enterprise.

  # The base URL of the API.
  # Leave this blank if you want to connect to the public GitHub.com API
  # This URL should always end with a trailing /
  # Some enterprise users have reported their URL to be like xxx.yyy.com/api/v3/
  enterprise.base_url: ""
  # The upload URL of the API, typically this is the same as the base_url.
  # Leave this blank if you want to connect to GitHub.com
  enterprise.upload_url: ""

  # Whether or not to log HTTP reqests to standard out.
  # This is to help you debug connection issues and SHOULD NOT be used in production.
  log_http_requests: false

  # The following are attributes that will make additional API calls for each repository.
  # The `enabled` property authorizes the extra API call(s).
  # If the attribute is a list it will automatically include a count of the elements in the list.
  # If you enable the .list option it will also dump out the contents of the list.
  #
  # The max attribute applies to attributes which make paged (possibly more than one) API calls.
  # Max is the maximum number of _elements_ you want to fetch (not pages).
  # The actual number returned is rounded to the nearest page e.g. if you set 15 items max, but
  # GitHub uses pages of size 10, you'll get 20 items.
  # The beat uses Github's default page sizes.
  # A value of -1 means to fetch all pages.

  # Should we enable counting forks? By default this is off because it's part of the basic
  # repository information.
  forks.enabled: false
  forks.list: false
  forks.max: -1

  # contributors gets who contributed to the repository and a count of their contributions.
  contributors.enabled: true
  contributors.list: true
  contributors.max: -1

  # Names and hashes of the branches in the project.
  branches.enabled: true
  branches.list: false
  branches.max: -1

  # The languages used in this repository, the number of bytes and
  # proportion of the total they make up.
  languages.enabled: true
  languages.list: true

  # Information about how many commits the community and the author
  # have made in the past year
  participation.enabled: true

  # Downloads is the number of downloads for each release.
  # These are a sum of individual release files e.g. linux-x86-64 + linux-x86 + source
  # Downloads includes a sum the downloads over all releases.
  downloads.enabled: true
  downloads.list: false
  downloads.max: -1

  # The following are attributes for fetching issues.
  # See https://developer.github.com/v3/issues/#list-issues for full options which
  # are summarized here.
  issues.enabled: true
  issues.list: true
  issues.max: -1
  # state is one of "open", "closed" or "all"
  issues.state: "open"
  # A list of labels
  issues.labels: []
  # What to sort results by, can be "created", "updated" or "comments"
  issues.sort: "created"
  # The direction of the sort, either "asc" or "desc"
  issues.direction: "desc"

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging


#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag or the `setup` command.
#setup.dashboards.enabled: false

# The URL from where to download the dashboards archive. By default this URL
# has a value which is computed based on the Beat name and version. For released
# versions, this URL points to the dashboard archive on the artifacts.elastic.co
# website.
#setup.dashboards.url:

#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"

#============================= Elastic Cloud ==================================

# These settings simplify using githubbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["localhost:9200"]

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#============================== Xpack Monitoring ===============================
# githubbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
#xpack.monitoring.enabled: false

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well. Any setting that is not set is
# automatically inherited from the Elasticsearch output configuration, so if you
# have the Elasticsearch output configured, you can simply uncomment the
# following line.
#xpack.monitoring.elasticsearch:
