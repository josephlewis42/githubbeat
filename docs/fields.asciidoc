
////
This file is generated! See _meta/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported fields

[partintro]

--
This document describes the fields that are exported by githubbeat. They are
grouped in the following categories:

* <<exported-fields-beat>>
* <<exported-fields-cloud>>
* <<exported-fields-docker-processor>>
* <<exported-fields-githubbeat>>
* <<exported-fields-host-processor>>
* <<exported-fields-kubernetes-processor>>

--
[[exported-fields-beat]]
== Beat fields

Contains common beat fields available in all event types.



[float]
=== `beat.name`

The name of the Beat sending the log messages. If the Beat name is set in the configuration file, then that value is used. If it is not set, the hostname is used. To set the Beat name, use the `name` option in the configuration file.


[float]
=== `beat.hostname`

The hostname as returned by the operating system on which the Beat is running.


[float]
=== `beat.timezone`

The timezone as returned by the operating system on which the Beat is running.


[float]
=== `beat.version`

The version of the beat that generated this event.


[float]
=== `@timestamp`

type: date

example: August 26th 2016, 12:35:53.332

format: date

required: True

The timestamp when the event log record was generated.


[float]
=== `tags`

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== `fields`

type: object

Contains user configurable fields.


[float]
== error fields

Error fields containing additional info in case of errors.



[float]
=== `error.message`

type: text

Error message.


[float]
=== `error.code`

type: long

Error code.


[float]
=== `error.type`

type: keyword

Error type.


[[exported-fields-cloud]]
== Cloud provider metadata fields

Metadata from cloud providers added by the add_cloud_metadata processor.



[float]
=== `meta.cloud.provider`

example: ec2

Name of the cloud provider. Possible values are ec2, gce, or digitalocean.


[float]
=== `meta.cloud.instance_id`

Instance ID of the host machine.


[float]
=== `meta.cloud.instance_name`

Instance name of the host machine.


[float]
=== `meta.cloud.machine_type`

example: t2.medium

Machine type of the host machine.


[float]
=== `meta.cloud.availability_zone`

example: us-east-1c

Availability zone in which this host is running.


[float]
=== `meta.cloud.project_id`

example: project-x

Name of the project in Google Cloud.


[float]
=== `meta.cloud.region`

Region in which this host is running.


[[exported-fields-docker-processor]]
== Docker fields

Docker stats collected from Docker.




[float]
=== `docker.container.id`

type: keyword

Unique container id.


[float]
=== `docker.container.image`

type: keyword

Name of the image the container was built on.


[float]
=== `docker.container.name`

type: keyword

Container name.


[float]
=== `docker.container.labels`

type: object

Image labels.


[[exported-fields-githubbeat]]
== githubbeat fields

None


[float]
=== `branch_list.count`

type: integer

Number of branches


[float]
=== `branch_list.error`

type: text

Error message when failing to retrieve branches


[float]
=== `branch_list.list`

type: nested

List of branches


[float]
=== `contributor_list.count`

type: integer

Number of countributors


[float]
=== `contributor_list.list`

type: nested

List of countributors


[float]
=== `contributor_list.error`

type: text

Error message when failing to retrieve countributors


[float]
=== `downloads.releases`

type: nested

Number of downloads per releases


[float]
=== `downloads.total_downloads`

type: integer

Total number of downloads for all releases


[float]
=== `downloads.error`

type: text

Error message when failing to retrieve downloads


[float]
=== `issues.count`

type: integer

Number of issues matching the given filter


[float]
=== `issues.error`

type: text

Error message when failing to retrieve issues


[float]
=== `issues.list`

type: nested

List of filtered issues


[float]
=== `fork_list.count`

type: integer

Number of forks


[float]
=== `fork_list.error`

type: text

Error message when failing to retrieve forks


[float]
=== `fork_list.list`

type: nested

List of forks


[float]
=== `forks`

type: integer

required: True

Number of forks


[float]
=== `languages.count`

type: integer

Number of programming languages used in this repo


[float]
=== `languages.error`

type: text

Error message when failing to retrieve programming languages


[float]
=== `languages.list`

type: nested

List of programming languages used in this repo


[float]
=== `license.key`

type: keyword

required: True

The SPDX license key: https://spdx.org/


[float]
=== `license.name`

type: keyword

required: True

Human readable license name


[float]
=== `license.spdx_id`

type: keyword

required: True

The SPDX license ID: https://spdx.org/


[float]
=== `network`

type: integer

required: True

Current network count


[float]
=== `open_issues`

type: integer

required: True

Current open issues count


[float]
=== `owner`

type: keyword

required: True

Repository owner


[float]
== participation fields

Participation data



[float]
=== `participation.all`

type: integer

[float]
=== `participation.community`

type: integer

[float]
=== `participation.owner`

type: integer

[float]
=== `participation.period`

type: keyword

[float]
=== `participation.error`

type: text

[float]
=== `repo`

type: keyword

required: True

Repository name


[float]
=== `size`

type: integer

required: True

Current repo size (bytes)


[float]
=== `stargazers`

type: integer

required: True

Current stargazers count


[float]
=== `subscribers`

type: integer

required: True

Current subscribers count


[float]
=== `watchers`

type: integer

required: True

Current watchers count


[[exported-fields-host-processor]]
== Host fields

Info collected for the host machine.




[float]
=== `host.hostname`

type: keyword

Hostname.


[float]
=== `host.id`

type: keyword

Unique host id.


[float]
=== `host.architecture`

type: keyword

Host architecture (e.g. x86_64, arm, ppc, mips).


[float]
=== `host.os.platform`

type: keyword

OS platform (e.g. centos, ubuntu, windows).


[float]
=== `host.os.version`

type: keyword

OS version.


[float]
=== `host.os.family`

type: keyword

OS family (e.g. redhat, debian, freebsd, windows).


[[exported-fields-kubernetes-processor]]
== Kubernetes fields

Kubernetes metadata added by the kubernetes processor




[float]
=== `kubernetes.pod.name`

type: keyword

Kubernetes pod name


[float]
=== `kubernetes.namespace`

type: keyword

Kubernetes namespace


[float]
=== `kubernetes.node.name`

type: keyword

Kubernetes node name


[float]
=== `kubernetes.labels`

type: object

Kubernetes labels map


[float]
=== `kubernetes.annotations`

type: object

Kubernetes annotations map


[float]
=== `kubernetes.container.name`

type: keyword

Kubernetes container name


[float]
=== `kubernetes.container.image`

type: keyword

Kubernetes container image


